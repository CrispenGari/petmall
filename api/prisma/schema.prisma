generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @unique @default(uuid())
  email    String @unique
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comment  Comment?
  reaction Reaction?
  pets     Pet[]
}

model Location {
  id             String  @unique @default(uuid())
  district       String?
  city           String?
  street         String?
  region         String?
  country        String?
  postalCode     String?
  subregion      String?
  timezone       String?
  streetNumber   String?
  name           String?
  isoCountryCode String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pet Pet?
}

model Pet {
  id   String @unique @default(uuid())
  name String
  age  Int

  description String
  gender      String
  image       String
  category    String
  sold        Boolean @default(false)
  price       Float

  reactions Reaction[]
  comments  Comment[]

  seller   User   @relation(fields: [sellerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  sellerId String

  location   Location @relation(fields: [locationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  locationId String   @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id      String @unique @default(uuid())
  comment String

  user   User   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userId String @unique

  reactions Reaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Pet       Pet?     @relation(fields: [petId], references: [id])
  petId     String?
}

model Reaction {
  id       String @unique @default(uuid())
  reaction String

  user   User   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pet   Pet?    @relation(fields: [petId], references: [id])
  petId String?

  comment   Comment? @relation(fields: [commentId], references: [id])
  commentId String?
}
